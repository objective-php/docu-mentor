#!/usr/bin/env php
<?php

if (file_exists($path = __DIR__ . '/../vendor/autoload.php')) {
    require_once $path;
}
if (file_exists($path = __DIR__ . '/../../../autoload.php')) {
    require_once $path;
}

$separator = "\n" . str_repeat('-', exec('tput cols'));

$options = [
    'force'       => 0,
    'init'        => 0,
    'config'      => 0,
    'verbose'     => 0,
    'config-dir' => __DIR__ . '/../../../../src/Config',
    'docs-dir'    => __DIR__ . '/../../../../docs',
    'composer-file'    => __DIR__ . '/../../../../composer.json',
];

$args = [];

foreach ($argv as $i => $arg) {
    if ($i === 0) {
        continue;
    } else {
        if (preg_match('/^(-+)([a-z-]+)=?(.*)?$/', $arg, $match)) {
            //$match[0];  -iv  --config --docs-dir=/var/here
            //$match[1];  -    --       --
            //$match[2];  iv   config   docs
            //$match[3];  null null     /var/here
            switch ($match[1]) {
                case '--':
                    $args[$match[3]] = $match[2];
                    break;
                case '-':
                    foreach (str_split($match[2]) as $char) {
                        $args[] = $char;
                    }
                    break;
                default:
                    fail('Argument badly writted : ' . $arg);
            }
        } else {
            fail('Argument badly writted : ' . $arg);
        }
    }
}

if (empty($args)) {
    $args[] = 'h';
}

foreach ($args as $i => $arg) {
    switch ($arg) {
        case 'h':
        case 'help':
        case 'u':
        case 'usage':
            echo getHelpText();
            exit(0);
        case 'v':
        case 'verbose':
            $options['verbose']++;
            break;
        case 'i':
        case 'init':
            $options['init']++;
            break;
        case 'c':
        case 'config':
            $options['config']++;
            break;
        case 'f':
        case 'force':
            $options['force']++;
            break;
        case 'd':
        case 'dev':
            $options['config-dir'] = __DIR__ . '/../src/Config';
            $options['docs-dir'] = __DIR__ . '/../output/docs';
            $options['composer-file'] = __DIR__ . '/../composer.json';
            break;
        case 'docs-dir':
            $options['docs-dir'] = $i;
            break;
        case 'config-dir':
            $options['config-dir'] = $i;
            break;
        case 'composer-file':
            $options['composer-file'] = $i;
            break;
        default:
            fail('Argument unkwown : ' . $arg);
    }
}

if ($options['verbose']) {
    echo "\nDocu will run with those options : \n\n";
    foreach ($options as $name => $value) {
        echo "      [$name] => $value\n";
    }
    echo "\n";
}

$docuMentor = new \ObjectivePHP\DocuMentor\DocuMentor($options['docs-dir'],$options['config-dir'], $options['composer-file']);

//======================================================================
// INIT
//======================================================================
if ($options['init']) {
    echo "Documentation initialization... \n\e[91m";
    if (!$options['force'] && \count(scandir($options['docs-dir'], SCANDIR_SORT_NONE)) > 2 ) {
        echo "\n\e[31m ERROR :\e[0m Documentation initialization aborted";
        echo "\n\e[31m ERROR :\e[0m You already have a docs folder, use \e[32m--force\e[0m to overwrite \n";
    } elseif ($docuMentor->initDocumentation( $options['force'])) {
        echo "\n\e[1;30;42m SUCCESS \e[0m Documentation initialized\n\n";
        echo '/docs
    |- 01.quick-start.md
    |- 02.detailed-usage.md
    |- 03.config-directives.md
    |- index.md
';
    } else {
        echo "\n\e[1;30;41m FAILURE \e[0m Documentation initialization aborted\n";
    }
}

//======================================================================
// CONFIG
//======================================================================
echo "\n\e[91m";
if ($options['config']) {
    if ($docuMentor->collectDirectiveConfigs()) {
        echo "\n\e[1;30;42m SUCCESS \e[0m Config documentation generated\n";
    } else {
        echo "\n\e[1;30;41m FAILURE \e[0m Config documentation aborted\n";
    }
}

//======================================================================
// ERRORS
//======================================================================
if ($options['verbose']) {
    foreach ($docuMentor->getReport() as $key => $exception) {
        echo $separator;
        echo "\n\e[31m EXCEPTION\e[32m " . ++$key . "\e[31m : \e[0m\n";
        echo "\e[35m  MESSAGE :\e[0m " . $exception->getMessage();
        if ($options['verbose'] > 1) {
            echo "\n\e[35m  LINE :\e[0m " . $exception->getLine() . ' in ' . $exception->getFile();
            if ($options['verbose'] > 2) {
                echo "\n\e[35m  TRACE :\e[0m " . $exception->getTraceAsString();
            }
        }
    }
}
if ($nbException = count($docuMentor->getReport())) {
    echo $separator;
    echo "\n- \e[31m $nbException\e[0m Exceptions thrown\n";
    if (!$options['verbose']) {
        echo "Use verbose mode to show Exceptions (-v or -vv or -vvv)\n";
    }
} else {
    echo "\n- \e[32m $nbException\e[0m Exception thrown\n";
}

//======================================================================
// UTILS
//======================================================================

function getHelpText()
{
    return "
Docu-mentor - Objective PHP's docs generator

Usage: docu [OPTIONS]
    -i, --init      Generate the docs/.md files
    -c, --configs   Update the config-directive docs file
    -v, --verbose   Shows the errors
    -vv, -vvv       Shows the errors more expressly
    -f, --force     Overwrite the docs
    -h,-u, --help,--usage
                    Show this message
     --config-dir=[path]
                    Specify a custom path for the configs
     --docs-dir=[path]
                    Specify a custom path for output directory
     --composer-file=[path]
                    Specify a custom path for the composer.json


Examples:
    Init the whole documentation:
        docu -ic

    Rewrite the config docs:
        docu -c -v

    Rewrite and debug your config:
        docu -c -vvv

    Reset the docs:
        docu -i --force

    Custom pathes:
        docu -ic --config-dir=./docs/ --docs-dir=./Config


Full documentation can be found at http://objective-php.org/
";
}

/**
 * @param string $message Error message
 */
function fail($message)
{
    fwrite(STDERR, "\033[31m ERROR: \033[0m $message  \n\n Use: \ndocu --help  to find help \n");
    exit(1);
}
